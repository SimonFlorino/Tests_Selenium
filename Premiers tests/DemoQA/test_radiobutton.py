# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

from Helper_test import Helper_test

class TestRadiobutton():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_radiobutton(self):

    self.driver.get("https://demoqa.com/radio-button")
    self.driver.set_window_size(1460, 1040)

    # Fermeture des popups de pub
    ads = Helper_test.wait_for_ads_to_load(self , timeout=10)
    for ad in ads:
      self.driver.execute_script("arguments[0].remove();", ad)

    self.driver.find_element(By.CSS_SELECTOR, "label[for='yesRadio']").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".text-success").text == "Yes"
    
    self.driver.find_element(By.CSS_SELECTOR, "label[for='impressiveRadio']").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".text-success").text == "Impressive"

    self.driver.find_element(By.CSS_SELECTOR, "label[for='noRadio']").click()
    selection_text = self.driver.find_element(By.CSS_SELECTOR, ".text-success").text
    assert (selection_text == "Impressive" or selection_text == "Yes")
    

# if __name__ == "__main__":
#   test = TestRadiobutton()
#   test.setup_method(None)
#   try:
#       test.test_radiobutton()
#   finally:
#       test.teardown_method(None)